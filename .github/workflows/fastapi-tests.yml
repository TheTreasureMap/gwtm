name: FastAPI Tests

on:
  push:
    branches: [ master, fastapi ]
  pull_request:
    branches: [ master, fastapi ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python for test dependencies
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements.txt
        
    - name: Set up environment variables
      run: |
        echo "DB_USER=treasuremap" >> $GITHUB_ENV
        echo "DB_PWD=treasuremap" >> $GITHUB_ENV
        echo "DB_NAME=treasuremap_dev" >> $GITHUB_ENV
        echo "MAIL_PASSWORD=dummy" >> $GITHUB_ENV
        echo "RECAPTCHA_PUBLIC_KEY=dummy" >> $GITHUB_ENV
        echo "RECAPTCHA_PRIVATE_KEY=dummy" >> $GITHUB_ENV
        echo "ZENODO_ACCESS_KEY=dummy" >> $GITHUB_ENV
        echo "AWS_ACCESS_KEY_ID=dummy" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=dummy" >> $GITHUB_ENV
        
    - name: Build Docker images
      run: |
        docker build -t gwtm_web:latest .
        docker build -f server/Dockerfile -t gwtm_fastapi:latest .
        
    - name: Start database with Docker Compose
      run: |
        docker-compose up -d db redis
        
    - name: Wait for database to be ready
      run: |
        timeout 120 bash -c 'until docker-compose exec -T db pg_isready -U treasuremap -d treasuremap_dev; do sleep 5; done'
        
    - name: Initialize database schema
      run: |
        docker-compose run --rm db_init
        
    - name: Load test data
      run: |
        docker-compose exec -T db psql -U treasuremap -d treasuremap_dev < tests/test-data.sql
        
    - name: Start FastAPI server
      run: |
        docker run -d --name fastapi-server \
          --network gwtm_default \
          -e DB_USER=treasuremap \
          -e DB_PWD=treasuremap \
          -e DB_NAME=treasuremap_dev \
          -e DB_HOST=gwtm_db \
          -e DB_PORT=5432 \
          -p 8000:8000 \
          gwtm_fastapi:latest
          
    - name: Wait for FastAPI server to be ready
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:8000/docs; do sleep 5; done'
        
    - name: Run FastAPI tests
      run: |
        python -m pytest tests/fastapi/ -v --disable-warnings
      env:
        API_BASE_URL: http://localhost:8000
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: treasuremap_dev
        DB_USER: treasuremap
        DB_PWD: treasuremap
        
    - name: Cleanup
      if: always()
      run: |
        docker stop fastapi-server || true
        docker rm fastapi-server || true
        docker-compose down -v